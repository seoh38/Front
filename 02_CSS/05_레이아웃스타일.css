/* 기본 스타일 테스트 */   
.size-test {
    border: 2px solid red;
}

#fixed-size {
    width: 200px;
    height: 200px;
}

/*크기를 가변적(%)으로 지정했기 때문에 부모(body)크기가 커질수록 크기가 변화한다.*/
/* body의 크기는 딱 자식크기만큼 크기가 늘어난다. */
#variable-size { 
    width: 50%;
    height: 200px;
}

/* 블록요소와 인라인  요소 */
.dispaly {
    width: 150px;
    height: 50px;
    border: 2px solid black;
    color: white;
}
#area1 {
    background-color: red;
}

#area2 {
    background-color: orange;
}

#area3 {
    background-color: yellow;
}

#area4 {
    background-color: green;
}

#area5 {
    background-color: blue;
}

.dispaly-inline { /*인라인 요소로 변경되면서 컨텐츠 만큼만의 크기를 가진다.*/
    display: inline;
}

.dispaly-inline-block { /*인라인요소의 특징과 블록요소의 특징을 둘다 가지고 있다.*/
    display: inline-block;
}

.display-block {
    display: block;
}

/* 테두리 스타일 테스트 */
.border {
    width: 100px;
    height: 100px;
    border: 5px;
}

#border-test1 { /*테두리를 없앰*/
    border-style: none;
}

#border-test2 { /*테두리를 숨김*/
    border-style: hidden;
    box-shadow: 10px 10px 10px 10px gray /*inset : 안쪽에 그림자를 주는 옵션*/;
}

#border-test3 {
    border-style: dotted;
}

#border-test4 {
    border-style: dashed;
    border-color: violet ;
}

#border-test5 {
    border-style: double;
    border-color: tomato;
}

#border-test6 { /*홈이 파인것처럼 표시(조각한것 처럼)*/
    border-style: groove;
    border-top-left-radius: 10px 20px;
}

#border-test7 {
    border-style: inset;
    border-bottom-right-radius: 50px;
}

#border-test8 {
    border-style: outset;
    border-bottom-right-radius: 50px;
}

#border-test9 {
    border-style: solid;
}

#border-test10 {
    border-style: ridge;
}

/* 여백 스타일 테스트 */
.space {
    width: 100px;
    height: 100px;
    background-color: lavender;
}

#padding1 {
    padding: 20px;
}

#padding2 {
    padding-top: 50px;
    padding-right: 100px ;
}

#margin1 {
    margin: 50px;
}

/*위아래로 margin을 서로 가지고 있으면 margin이 중첩된다.*/
/* 중첩이 되면 마진값이 큰 값으로 고정이 된다. */
#margin2 {
    margin-left: 20px;
    margin-top: 50px;
}

/* 포지셔닝 테스트 */
/* static : 구조에 따라서 위치가 지정되는 것 */
/*static오프셋값을 주지 않으면 staticd 위치를 기분으로 위치를 지정한다.*/
/*relative를 주면 static 위치에서 오프셋 속성을 사용하여 위치를 변경가능하다.*/
/* 오프셋 속성 : top, left, right, bottom */
.outer { 
    position: relative;
    /* top: 100px;
    left: 100px; */
    border: 1px solid;
}

#first {
    width: 300px;
    height: 300px;
    background-color: lightgoldenrodyellow;
}

/* absolute는 위치를 주면 부모나 조상요소중에 static이 아닌 것들을 찾는다 */
/* static가 아닌 것들이 없으면 body를 기준으로 위치를 지정한다. */
/* 부모 요소의 position이 relative여야 한다. */
#second {
    position: absolute;
    top: 50px;
    left: 50px;
    width: 200px;
    height: 200px;
    background-color: yellowgreen;
}

#third {
    position: absolute;
    top: 100px;
    left: 100px;
    width: 100px;
    height: 100px;
    background-color: royalblue;
}

/* fixed : 브라우저 화면 영역을 기준으로 위치가 고정된다. */
#fixed-area {
    width: 100px;
    height: 100px;
    background-color: gold;
    /* position: fixed; */
    position: sticky;
    top: 50px;
    left: 50px;
}

/* visibility 테스트 */
.visibility {
    width: 100px;
    height: 100px;
    border: 1px solid;
    margin-bottom: 5px;
}

#v-test1 {
    background-color: pink;
}

/* visibility:hidden을 해주면 공간은 차지하지만 보이지는 않는다. */
/* display:none 는 공간도 보이지 않게한다. */
#v-test2 {
    background-color: khaki;
    visibility: hidden;
    /* display: none; */
}

#v-test3 {
    background-color: lightblue;
}

/* z-index 테스트 */
.z-test {
    width: 150px;
    height: 150px;
    border: 1px solid;
}

#z-outer {
    position: relative;
    height: 300px;
}

#z1 {
    background-color: seagreen;
    position: absolute;
    top: 50px;
    left: 30px;
    z-index: 2;
}

#z2 {
    background-color: greenyellow;
    position: absolute;
    top: 100px;
    left: 70px;
}

#z3 {
    background-color: linen;
    position: absolute;
    top: 80px;
    left: 150px;
    z-index: 1;
}

/* float 테스트 */
.float-test {
    border: 1px solid;
    width: 100px;
    height: 100px;
    /* float: left; */
    float: right;
    margin-right: 3px;
    margin-bottom: 10px;
}

/* 다단 스타일 테스트 */
.column-wrap {
    border: 1px solid;
    height: 250px;
    overflow: scroll;

}
#column1 {
    column-width: 300px;
    column-gap: 30px;
}

#column2 {
    column-count: 4;
    column-rule-style: dashed ;
    column-rule-color: orange ;
}

#column2>h4 {
    column-span: all;
}

/* 테이블 스타일 테스트*/
table {
    caption-side: bottom;
    width: 300px;
    height: 400px;
    border: 1px solid;
    /* border-collapse: collapse; */
    border-spacing: 30px;
    empty-cells: hide;
    table-layout: fixed;
    word-break:break-all;
}

td {
    border: 1px solid;
    width: 80px;
    height: 100px;
    text-align: center;
    vertical-align: bottom;
}




























